{"ast":null,"code":"var _jsxFileName = \"/home/karolina/Desktop/Weather-App/src/components/App.js\";\nimport { Component } from 'react';\nimport logo from \"../logo.svg\";\nimport './App.css';\nimport Form from './Form';\nimport Result from './Result';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APIKey = 'ed2372e53b834fca6fa2ece9f7c954bc';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: '',\n      date: '',\n      city: '',\n      sunrise: '',\n      sunset: '',\n      temp: '',\n      pressure: '',\n      wind: '',\n      err: false\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n  }\n\n  /*handleCitySubmit = e => {\n    e.preventDefault()\n    console.log(\"hej\");\n    const API =`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=${APIKey}`;\n     fetch(API)\n      .then(response=> {\n        if (response.ok){\n          return response;\n        }\n        throw Error(\"Nie udalo sie\")\n      })\n      .then(response=> response.json())\n      .then(data=>{\n         const nowDate= new Date().toLocaleString();\n         this.setState( prevState=>({  //prevState zamiast obiektu przekazuje funkcje\n          //niekoniecznie musi byc, moglby zostac obiekt\n          date: nowDate,\n          city: prevState.value,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          temp: data.main.temp,\n          pressure: data.main.pressure,\n          wind: data.wind.speed,\n          err: false\n        }))\n      })\n      .catch(err=>{\n        console.log(err);\n        this.setState({\n          err: true,\n          city: this.state.value\n        })\n      })\n  }*/\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.value === 0 || String(this.state.value.length < 2)) return;\n\n    if (prevState.value !== this.state.value) {\n      const API = `http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=${APIKey}`;\n      fetch(API).then(response => {\n        if (response.ok) {\n          return response;\n        }\n\n        throw Error(\"Nie udalo sie\");\n      }).then(response => response.json()).then(data => {\n        const nowDate = new Date().toLocaleString();\n        this.setState(prevState => ({\n          //prevState zamiast obiektu przekazuje funkcje\n          //niekoniecznie musi byc, moglby zostac obiekt\n          date: nowDate,\n          city: prevState.value,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          temp: data.main.temp,\n          pressure: data.main.pressure,\n          wind: data.wind.speed,\n          err: false\n        }));\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          err: true,\n          city: this.state.value\n        });\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Check weather for your city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        value: this.state.value,\n        change: this.handleInputChange //submit={this.handleCitySubmit}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Result, {\n        weather: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/karolina/Desktop/Weather-App/src/components/App.js"],"names":["Component","Form","Result","APIKey","App","state","value","date","city","sunrise","sunset","temp","pressure","wind","err","handleInputChange","e","setState","target","componentDidUpdate","prevProps","prevState","String","length","API","fetch","then","response","ok","Error","json","data","nowDate","Date","toLocaleString","sys","main","speed","catch","console","log","render"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport logo from '../logo.svg';\nimport './App.css';\nimport Form from './Form';\nimport Result from './Result'\n\nconst APIKey='ed2372e53b834fca6fa2ece9f7c954bc';\n\nclass App extends Component {\n   \n  state = {\n    value: '',\n    date: '',\n    city: '',\n    sunrise: '',\n    sunset: '',\n    temp: '',\n    pressure: '',\n    wind: '',\n    err: false,\n  }\n\n  handleInputChange=(e)=>{\n    this.setState({\n      value: e.target.value\n    })\n  }\n\n  /*handleCitySubmit = e => {\n    e.preventDefault()\n    console.log(\"hej\");\n    const API =`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=${APIKey}`;\n\n    fetch(API)\n      .then(response=> {\n        if (response.ok){\n          return response;\n        }\n        throw Error(\"Nie udalo sie\")\n      })\n      .then(response=> response.json())\n      .then(data=>{\n\n        const nowDate= new Date().toLocaleString();\n\n        this.setState( prevState=>({  //prevState zamiast obiektu przekazuje funkcje\n          //niekoniecznie musi byc, moglby zostac obiekt\n          date: nowDate,\n          city: prevState.value,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          temp: data.main.temp,\n          pressure: data.main.pressure,\n          wind: data.wind.speed,\n          err: false\n        }))\n      })\n      .catch(err=>{\n        console.log(err);\n        this.setState({\n          err: true,\n          city: this.state.value\n        })\n      })\n  }*/\n\n  componentDidUpdate(prevProps, prevState){\n\n    if (this.state.value===0 || String((this.state.value).length<2)) return;\n    if (prevState.value!==this.state.value){\n      const API =`http://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=${APIKey}`;\n\n      fetch(API)\n      .then(response=> {\n        if (response.ok){\n          return response;\n        }\n        throw Error(\"Nie udalo sie\")\n      })\n      .then(response=> response.json())\n      .then(data=>{\n\n        const nowDate= new Date().toLocaleString();\n\n        this.setState( prevState=>({  //prevState zamiast obiektu przekazuje funkcje\n          //niekoniecznie musi byc, moglby zostac obiekt\n          date: nowDate,\n          city: prevState.value,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          temp: data.main.temp,\n          pressure: data.main.pressure,\n          wind: data.wind.speed,\n          err: false\n        }))\n      })\n      .catch(err=>{\n        console.log(err);\n        this.setState({\n          err: true,\n          city: this.state.value\n        })\n      })\n    }\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <h1>\n          Check weather for your city!\n        </h1>\n        <Form \n          value={this.state.value} \n          change={this.handleInputChange}\n          //submit={this.handleCitySubmit}\n        />\n        <Result weather={this.state} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}